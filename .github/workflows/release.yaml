name: release
concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true
on:
  push:
    branches:
      - main
jobs:
  upload-application:
    runs-on: macos-12
    steps:
      - uses: actions/checkout@v3
      - name: setup-go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
          cache: true
          cache-dependency-path: go.sum
      - name: build-liblocalias
        run: |
          export CGO_ENABLED=1
          export CC=/usr/bin/clang
          export CXX=/usr/bin/clang++
          rm -rf ./build && mkdir -p ./build
          # amd
          GOOS=darwin GOARCH=amd64 go build --buildmode=c-archive -o ./build/liblocalias-amd64.a ./app/
          # arm
          GOOS=darwin GOARCH=arm64 go build --buildmode=c-archive -o ./build/liblocalias-arm64.a ./app/
          # smash them together
          lipo -create ./build/*.a -o ./app/Localias/liblocalias.a
          mv ./build/liblocalias-arm64.h ./app/Localias/liblocalias.h
          rm -rf build
      - name: build-app
        run: |
          cd app
          rm -rf build
          mkdir build
          xcodebuild -scheme Release archive -archivePath build
          mv build.xcarchive/Products/Applications/* build
          rm -rf build.xcarchive
          readlink -f build/Localias.app
          zip -r build/Localias.app.zip build/Localias.app
      - name: upload-app
        run: |
          version="$(cat ./VERSION)"
          commit_sha="$(git rev-parse --short HEAD)"
          timestamp="$(date +%s)"
          release_name="$version-$timestamp-$commit_sha"
          token=${{ secrets.GITHUB_TOKEN }}
          # https://docs.github.com/en/rest/releases/releases#create-a-release
          # https://stackoverflow.com/questions/45240336/how-to-use-github-release-api-to-make-a-release-without-source-code
          upload_url=$(curl -s -H "Authorization: token $token" \
            -d "{\"tag_name\": \"$release_name\", \"name\":\"$release_name\",\"target_comitish\": \"$commit_sha\"}" \
            "https://api.github.com/repos/peterldowns/localias/releases" | jq -r '.upload_url')
          upload_url="${upload_url%\{*}"
          curl -s -H "Authorization: token $token" \
            -H "Content-Type: application/octet-stream" \
            --data-binary @app/build/Localias.app.zip \
            "$upload_url?name=Localias.app.zip&label=Localias.app.zip"

  upload-binaries:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: setup-go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19
        cache: true
        cache-dependency-path: go.sum
    # TODO: embed the release information appropriately here
    - run: CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -o ./bin/localias-darwin-amd64 ./cmd/localias
    - run: CGO_ENABLED=0 GOOS=darwin GOARCH=arm64 go build -o ./bin/localias-darwin-arm64 ./cmd/localias
    - run: CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -o ./bin/localias-linux-arm64 ./cmd/localias
    - run: CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o ./bin/localias-linux-amd64 ./cmd/localias
    - run: |
        version="$(cat ./VERSION)"
        commit_sha="$(git rev-parse --short HEAD)"
        timestamp="$(date +%s)"
        release_name="$version-$timestamp-$commit_sha"
        token=${{ secrets.GITHUB_TOKEN }}
        # https://docs.github.com/en/rest/releases/releases#create-a-release
        # https://stackoverflow.com/questions/45240336/how-to-use-github-release-api-to-make-a-release-without-source-code
        upload_url=$(curl -s -H "Authorization: token $token" \
          -d "{\"tag_name\": \"$release_name\", \"name\":\"$release_name\",\"target_comitish\": \"$commit_sha\"}" \
          "https://api.github.com/repos/peterldowns/localias/releases" | jq -r '.upload_url')
        upload_url="${upload_url%\{*}"
        curl -s -H "Authorization: token $token" \
          -H "Content-Type: application/octet-stream" \
          --data-binary @bin/localias-darwin-amd64 \
          "$upload_url?name=localias-darwin-amd64&label=localias-darwin-amd64"
        curl -s -H "Authorization: token $token" \
          -H "Content-Type: application/octet-stream" \
          --data-binary @bin/localias-darwin-arm64 \
          "$upload_url?name=localias-darwin-arm64&label=localias-darwin-arm64"
        curl -s -H "Authorization: token $token" \
          -H "Content-Type: application/octet-stream" \
          --data-binary @bin/localias-linux-arm64 \
          "$upload_url?name=localias-linux-arm64&label=localias-linux-arm64"
        curl -s -H "Authorization: token $token" \
          -H "Content-Type: application/octet-stream" \
          --data-binary @bin/localias-linux-amd64 \
          "$upload_url?name=localias-linux-amd64&label=localias-linux-amd64"
