name: release
concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true
on:
  push:
    branches:
      - main
jobs:
  upload-application:
    runs-on: macos-12
    steps:
      - uses: actions/checkout@v3
      - name: setup-go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
          cache: true
          cache-dependency-path: go.sum
      - name: build-liblocalias
        run: |
          ./scripts/build-liblocalias.sh
      - name: build-app
        run: |
          ./scripts/build-app.sh
      - name: upload-app
        run: |
          RELEASE_UPLOAD_URL=$(./scripts/upsert-gh-release.sh)
          curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/octet-stream" \
            --data-binary @app/build/Localias.app.zip \
            "$RELEASE_UPLOAD_URL?name=Localias.app.zip&label=Localias.app.zip"
        env:
          GH_TOKEN: ${{ github.token }}
  upload-binaries:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: setup-go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19
        cache: true
        cache-dependency-path: go.sum
    - name: generate release
      run:
        upload_url=$(./scripts/upsert-gh-release.sh)
        echo "{RELEASE_UPLOAD_URL}={$upload_url}" >> "$GITHUB_ENV"
      env:
        GH_TOKEN: ${{ github.token }}
    - name: release-darwin-amd64
      run: |
        ldflags=$(./scripts/golang-ldflags.sh)
        CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -ldflags "$ldflags" -o ./bin/localias-darwin-amd64 ./cmd/localias
        curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN}}" \
          -H "Content-Type: application/octet-stream" \
          --data-binary @bin/localias-darwin-amd64 \
          "$RELEASE_UPLOAD_URL?name=localias-darwin-amd64&label=localias-darwin-amd64"
    - name: release-darwin-arm64
      run: |
        ldflags=$(./scripts/golang-ldflags.sh)
        CGO_ENABLED=0 GOOS=darwin GOARCH=arm64 go build -ldflags "$ldflags" -o ./bin/localias-darwin-arm64 ./cmd/localias
        curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Content-Type: application/octet-stream" \
          --data-binary @bin/localias-darwin-arm64 \
          "$RELEASE_UPLOAD_URL?name=localias-darwin-arm64&label=localias-darwin-arm64"
    - name: release-linux-arm64
      run: |
        ldflags=$(./scripts/golang-ldflags.sh)
        CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -ldflags "$ldflags" -o ./bin/localias-linux-arm64 ./cmd/localias
        curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Content-Type: application/octet-stream" \
          --data-binary @bin/localias-linux-arm64 \
          "$RELEASE_UPLOAD_URL?name=localias-linux-arm64&label=localias-linux-arm64"
    - name: release-linux-amd64
      run: |
        ldflags=$(./scripts/golang-ldflags.sh)
        CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags "$ldflags" -o ./bin/localias-linux-amd64 ./cmd/localias
        curl -s -H "Authorization: token $token" \
          -H "Content-Type: application/octet-stream" \
          --data-binary @bin/localias-linux-amd64 \
          "$RELEASE_UPLOAD_URL?name=localias-linux-amd64&label=localias-linux-amd64"
